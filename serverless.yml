service: serverlesslambda
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - s3:GetObject
      Resource: '*'

resources:
  Resources:
    employeeTable:
     Type: "AWS::DynamoDB::Table"
     Properties:
        AttributeDefinitions:
          - AttributeName: employeeId
            AttributeType: S 
        KeySchema:
          - AttributeName: employeeId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "employee"


functions:
  createEmployee:
    handler: src/handler/createEmployee.createEmployee
    events: 
      - http: 
         path: createEmployee
         method: post
         cors: true
  deleteEmployee:
    handler: src/handler/deleteEmployee.deleteEmployee
    events: 
      - http: 
         path: deleteEmployee/{employeeId}
         method: delete
         cors: true
  updateEmployee:
    handler: src/handler/updateEmployee.updateEmployee
    events: 
      - http: 
         path: updateEmployee/{employeeId}
         method: put
         cors: true
  getEmployee:
    handler: src/handler/getEmployee.getEmployee
    events: 
      - http: 
         path: getEmployee/{employeeId}
         method: get
         cors: true  
  getAllEmployee:
    handler: src/handler/getAllEmployee.getAllEmployee
    events: 
      - http: 
         path: getAllEmployee
         method: get
         cors: true                          




